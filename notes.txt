node version 12.16.2
discord.js version 12.2.0

--NOTE: auth.json and googleClientSecret.json  have sensitive data and are confidential, do not share them with anyone.  It may also be of interest to not share configs.json  although the data is less sensitive


https://discord.js.org/#/docs/main/stable/general/welcome


https://www.youtube.com/watch?v=UGN6EUi4Yio
https://www.npmjs.com/package/google-spreadsheet  //used
https://developers.google.com/sheets/api/quickstart/nodejs  //not used
https://console.developers.google.com/   //for setup (enable drive and sheets API and obtain clientSecret)

https://www.sqlitetutorial.net/sqlite-nodejs/

https://moment.github.io/luxon/index.html




npm install discord.js --save
npm install google-spreadsheet --save
npm install sqlite3 --save
npm install luxon --save


https://docs.microsoft.com/en-us/windows/nodejs/setup-on-windows
https://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-setup.zip



================================//aimed to use to determine whether a bot was already online before starting the current one
"bot_id": "(UNUSED) bot userID / clientID (can find in general info on discord dev applications site or rightclick bot in user list on a server and [copy ID])",

================================//not clear on actual usage, maybe emote deletion? dont really need it anyway

                    /* reaction is disposed? */
                    collector.on('dispose', (reaction, user) => { //dispose event is not being fired on emoji complete removal
                        console.log("\ncollected a disposed reaction");
                        console.log("user ["+user.username+":"+user.id+"]");
                        console.log("  removed reaction ["+reaction.emoji.name+":"+reaction.emoji.id+"]");
                        console.log("  on message ["+reaction.message.id+"]");
                        if (reaction.emoji.id) { //not null -> custom
                            var react_emote = reaction.emoji.id;
                        }
                        else { //null -> unicode
                            var react_emote = reaction.emoji.name;
                        }
                        var role_to_assign = reactroles[reaction.message.guild.id][reaction.message.channel.id][reaction.message.id]['emotes'][react_emote];
                        console.log("role to remove: "+role_to_assign);

                        var self_remove = (user.id === reaction.client.user.id);
                        console.log("user id: "+user.id);
                        console.log("reaction user id: "+reaction.client.user.id);
                        console.log("user removing own reaction: "+self_remove);
                        
                        //restart reaction
                        reaction.message.react(react_emote);
                        console.log("--replaced base emote");
                    });

=====================================
//for testing 
    msg.guild.channels.resolve("").messages.fetch("")
    .then(message => {
        console.log(message.author.username+":"+message.author.id);
        console.log(message.content);
    })
    .catch(console.error);

======================================
//switched design from give role then delete rest to delete all then give role
if ( role_to_assign !== current_group[( reactrole_group.includes(msg_react.emoji.id) 
                                    ? msg_react.emoji.id // if id key exists then use id as key
                                    : msg_react.emoji.name )] )  //if name key exists then use name as key
                                //role is the newly added role (if emotes have the same role assignment)
                                {
                                    //re-add role?
                                }

========================================
